"use strict";var b=Object.defineProperty;var z=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var I=Object.prototype.hasOwnProperty;var h=Math.pow;var F=(o,t)=>{for(var n in t)b(o,n,{get:t[n],enumerable:!0})},q=(o,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of v(t))!I.call(o,i)&&i!==n&&b(o,i,{get:()=>t[i],enumerable:!(r=z(t,i))||r.enumerable});return o};var A=o=>q(b({},"__esModule",{value:!0}),o);var X={};F(X,{Poline:()=>m,hslToPoint:()=>x,pointToHSL:()=>M,positionFunctions:()=>H,randomHSLPair:()=>C,vectorsOnLine:()=>V});module.exports=A(X);var M=o=>{let[t,n,r]=o,i=.5,e=.5,s=Math.atan2(n-e,t-i)*(180/Math.PI);s=(360+s)%360;let a=r,P=Math.sqrt(Math.pow(n-e,2)+Math.pow(t-i,2))/i;return[s,a,P]},x=o=>{let[t,n,r]=o,i=.5,e=.5,c=t/(180/Math.PI),s=r*i,a=i+s*Math.cos(c),u=e+s*Math.sin(c);return[a,u,n]},C=(o=90,t=0,n=.25,r=null)=>{let i,e,c;r?[i,e,c]=r:(i=Math.random()*360,e=Math.random(),c=Math.random());let s=(360+(i+o+Math.random()*(360-o*2)))%360,a=t+Math.random()*(1-t),u=t+Math.random()*(1-n);return[[i,e,c],[s,a,u]]},V=(o,t,n=4,r=!1,i=(s,a)=>a?1-s:s,e=(s,a)=>a?1-s:s,c=(s,a)=>a?1-s:s)=>{let s=[];for(let a=0;a<n;a++){let u=a/(n-1),P=i(u,r),d=e(u,r),f=c(u,r),w=(1-P)*o[0]+P*t[0],y=(1-d)*o[1]+d*t[1],g=(1-f)*o[2]+f*t[2];s.push([w,y,g])}return s},O=o=>o,S=(o,t=!1)=>t?1-h(1-o,2):h(o,2),E=(o,t=!1)=>t?1-h(1-o,3):h(o,3),Y=(o,t=!1)=>t?1-h(1-o,4):h(o,4),Z=(o,t=!1)=>t?1-h(1-o,5):h(o,5),p=(o,t=!1)=>t?1-Math.sin((1-o)*Math.PI/2):Math.sin(o*Math.PI/2),L=(o,t=!1)=>t?1-Math.asin(1-o)/(Math.PI/2):Math.asin(o)/(Math.PI/2),R=(o,t=!1)=>t?1-Math.cos((1-o)*Math.PI/2):Math.cos(o*Math.PI/2),$=(o,t=!1)=>t?1-Math.sqrt(1-h(1-o,2)):1-Math.sqrt(1-h(o,2)),T=(o,t=!1)=>t?Math.sqrt(1-h(1-o,2)):1-Math.sqrt(1-o),H={linearPosition:O,exponentialPosition:S,quadraticPosition:E,cubicPosition:Y,quarticPosition:Z,sinusoidalPosition:p,asinusoidalPosition:L,buggyCosinePosition:R,circularPosition:$,arcPosition:T},N=(o,t)=>{let n=o[0]===null||t[0]===null?0:t[0]-o[0],r=o[1]===null||t[1]===null?0:t[1]-o[1],i=o[1]===null||t[1]===null?0:t[2]-o[2];return Math.sqrt(n*n+r*r+i*i)},l=class{constructor({x:t,y:n,z:r,color:i}={}){this.x=0;this.y=0;this.z=0;this.color=[0,0,0];this.positionOrColor={x:t,y:n,z:r,color:i}}set positionOrColor({x:t,y:n,z:r,color:i}){if(t&&n&&n&&i)throw new Error("Point must be initialized with either x,y,z or hsl");t&&n&&r?(this.x=t,this.y=n,this.z=r,this.color=M([this.x,this.y,this.z])):i&&(this.color=i,[this.x,this.y,this.z]=x(i))}get position(){return[this.x,this.y,this.z]}get hslCSS(){return`hsl(${this.color[0]}, ${this.color[1]*100}%, ${this.color[2]*100}%)`}},m=class{constructor(t=C(),n=4,r=p,i,e){this.positionFunction=p;this.positionFunctionY=p;this.positionFunctionZ=p;if(!t||t.length<2)throw new Error("Must have at least two anchor colors");if(n<1)throw new Error("Must have at least one point");this.anchorPoints=t.map(c=>new l({color:c})),this.numPoints=n+2,this.positionFunction=r,this.positionFunctionY=i||r,this.positionFunctionZ=e||r,this.updatePointPairs()}updatePointPairs(){let t=[];for(let n=0;n<this.anchorPoints.length-1;n++){let r=[this.anchorPoints[n],this.anchorPoints[n+1]];t.push(r)}this.points=t.map((n,r)=>{let i=n[0]?n[0].position:[0,0,0],e=n[1]?n[1].position:[0,0,0];return V(i,e,this.numPoints,!!(r%2),this.positionFunction,this.positionFunctionY,this.positionFunctionZ).map(c=>new l({x:c[0],y:c[1],z:c[2]}))})}addAnchorPoint({x:t,y:n,z:r,color:i}){let e=new l({x:t,y:n,z:r,color:i});return this.anchorPoints.push(e),this.updatePointPairs(),e}removeAnchorPoint(t){let n=this.anchorPoints.indexOf(t);n>-1&&this.anchorPoints.splice(n,1),this.updatePointPairs()}getClosestAnchorPoint(t,n){let r=this.anchorPoints.map(c=>N(c.position,t)),i=Math.min(...r);if(console.log(i),i>n)return null;let e=r.indexOf(i);return this.anchorPoints[e]}set anchorPoint({pointReference:t,pointIndex:n,x:r,y:i,z:e,color:c}){let s=n;if(t&&(s=this.anchorPoints.indexOf(t)),s==-1)throw new Error("Anchor point not found");(s==0||s==this.anchorPoints.length-1)&&(this.anchorPoints[s]=new l({x:r,y:i,z:e,color:c}),this.updatePointPairs())}get flattenedPoints(){return this.points.flat().filter((t,n)=>n!=0?n%this.numPoints:!0)}get colors(){return this.flattenedPoints.map(t=>t.color)}get colorsCSS(){return this.flattenedPoints.map(t=>t.hslCSS)}};
