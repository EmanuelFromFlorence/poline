var b=o=>{let[t,n,i]=o,s=.5,e=.5,r=Math.atan2(n-e,t-s)*(180/Math.PI);r=(360+r)%360;let h=i,P=Math.sqrt(Math.pow(n-e,2)+Math.pow(t-s,2))/s;return[r,h,P]},p=o=>{let[t,n,i]=o,s=.5,e=.5,c=t/(180/Math.PI),r=i*s,h=s+r*Math.cos(c),u=e+r*Math.sin(c);return[h,u,n]},f=(o=Math.random()*360,t=[Math.random(),Math.random()],n=[.75+Math.random()*.2,.3+Math.random()*.2])=>[[o,t[0],n[0]],[(o+60+Math.random()*180)%360,t[1],n[1]]],X=(o=Math.random()*360,t=[Math.random(),Math.random(),Math.random()],n=[.75+Math.random()*.2,Math.random()*.2,.75+Math.random()*.2])=>[[o,t[0],n[0]],[(o+60+Math.random()*180)%360,t[1],n[1]],[(o+60+Math.random()*180)%360,t[2],n[2]]],C=(o,t,n=4,i=!1,s=(r,h)=>h?1-r:r,e=(r,h)=>h?1-r:r,c=(r,h)=>h?1-r:r)=>{let r=[];for(let h=0;h<n;h++){let u=h/(n-1),P=s(u,i),m=e(u,i),d=c(u,i),M=(1-P)*o[0]+P*t[0],x=(1-m)*o[1]+m*t[1],V=(1-d)*o[2]+d*t[2];r.push([M,x,V])}return r},y=o=>o,A=(o,t=!1)=>t?1-(1-o)**2:o**2,g=(o,t=!1)=>t?1-(1-o)**3:o**3,v=(o,t=!1)=>t?1-(1-o)**4:o**4,w=(o,t=!1)=>t?1-(1-o)**5:o**5,a=(o,t=!1)=>t?1-Math.sin((1-o)*Math.PI/2):Math.sin(o*Math.PI/2),z=(o,t=!1)=>t?1-Math.asin(1-o)/(Math.PI/2):Math.asin(o)/(Math.PI/2),_=(o,t=!1)=>t?1-Math.cos((1-o)*Math.PI/2):Math.cos(o*Math.PI/2),L=(o,t=!1)=>t?1-Math.sqrt(1-(1-o)**2):1-Math.sqrt(1-o**2),I=(o,t=!1)=>t?Math.sqrt(1-(1-o)**2):1-Math.sqrt(1-o),Y={linearPosition:y,exponentialPosition:A,quadraticPosition:g,cubicPosition:v,quarticPosition:w,sinusoidalPosition:a,asinusoidalPosition:z,buggyCosinePosition:_,circularPosition:L,arcPosition:I},S=(o,t)=>{let n=o[0]===null||t[0]===null?0:t[0]-o[0],i=o[1]===null||t[1]===null?0:t[1]-o[1],s=o[1]===null||t[1]===null?0:t[2]-o[2];return Math.sqrt(n*n+i*i+s*s)},l=class{constructor({x:t,y:n,z:i,color:s}={}){this.x=0;this.y=0;this.z=0;this.color=[0,0,0];this.positionOrColor({x:t,y:n,z:i,color:s})}positionOrColor({x:t,y:n,z:i,color:s}){if(t&&n&&n&&s)throw new Error("Point must be initialized with either x,y,z or hsl");t&&n&&i?(this.x=t,this.y=n,this.z=i,this.color=b([this.x,this.y,this.z])):s&&(this.color=s,[this.x,this.y,this.z]=p(s))}set position([t,n,i]){this.x=t,this.y=n,this.z=i,this.color=b([this.x,this.y,this.z])}get position(){return[this.x,this.y,this.z]}set hsl([t,n,i]){this.color=[t,n,i],[this.x,this.y,this.z]=p(this.color)}get hsl(){return this.color}shiftHue(t){this.color[0]=(360+(this.color[0]+t))%360,[this.x,this.y,this.z]=p(this.color)}get hslCSS(){return`hsl(${this.color[0]}, ${this.color[1]*100}%, ${this.color[2]*100}%)`}},F=class{constructor({anchorColors:t=f(),numPoints:n=4,positionFunction:i=a,positionFunctionX:s,positionFunctionY:e,positionFunctionZ:c,closedLoop:r}={anchorColors:f(),numPoints:4,positionFunction:a,closedLoop:!1}){this._needsUpdate=!0;this._positionFunctionX=a;this._positionFunctionY=a;this._positionFunctionZ=a;this.connectLastAndFirstAnchor=!1;this._animationFrame=null;if(!t||t.length<2)throw new Error("Must have at least two anchor colors");this.anchorPoints=t.map(h=>new l({color:h})),this._numPoints=n+2,this.positionFunctionX=s||i||a,this.positionFunctionY=e||i||a,this.positionFunctionZ=c||i||a,this.connectLastAndFirstAnchor=r,this.updatePointPairs()}get numPoints(){return this._numPoints}set numPoints(t){if(t<1)throw new Error("Must have at least one point");this._numPoints=t+2,this.updatePointPairs()}set positionFunctionX(t){this._positionFunctionX=t,this.updatePointPairs()}get positionFunctionX(){return this._positionFunctionX}set positionFunctionY(t){this._positionFunctionY=t,this.updatePointPairs()}get positionFunctionY(){return this._positionFunctionY}set positionFunctionZ(t){this._positionFunctionZ=t,this.updatePointPairs()}get positionFunctionZ(){return this._positionFunctionZ}updatePointPairs(){let t=[],n=this.connectLastAndFirstAnchor?this.anchorPoints.length:this.anchorPoints.length-1;for(let i=0;i<n;i++){let s=[this.anchorPoints[i],this.anchorPoints[(i+1)%this.anchorPoints.length]];t.push(s)}this.points=t.map((i,s)=>{let e=i[0]?i[0].position:[0,0,0],c=i[1]?i[1].position:[0,0,0];return C(e,c,this.numPoints,!!(s%2),this.positionFunctionX,this.positionFunctionY,this.positionFunctionZ).map(r=>new l({x:r[0],y:r[1],z:r[2]}))})}addAnchorPoint({x:t,y:n,z:i,color:s,insertAtIndex:e}){let c=new l({x:t,y:n,z:i,color:s});return e?this.anchorPoints.splice(e,0,c):this.anchorPoints.push(c),this.updatePointPairs(),c}removeAnchorPoint(t){let n=this.anchorPoints.indexOf(t);n>-1&&this.anchorPoints.splice(n,1),this.updatePointPairs()}getClosestAnchorPoint(t,n){let i=this.anchorPoints.map(c=>S(c.position,t)),s=Math.min(...i);if(s>n)return null;let e=i.indexOf(s);return this.anchorPoints[e]}set closedLoop(t){this.connectLastAndFirstAnchor=t,this.updatePointPairs()}set anchorPoint({pointReference:t,pointIndex:n,x:i,y:s,z:e,color:c}){let r=n;if(t&&(r=this.anchorPoints.indexOf(t)),r==-1)throw new Error("Anchor point not found");(r==0||r==this.anchorPoints.length-1)&&(this.anchorPoints[r]=new l({x:i,y:s,z:e,color:c}),this.updatePointPairs())}get flattenedPoints(){return this.points.flat().filter((t,n)=>n!=0?n%this.numPoints:!0)}get colors(){let t=this.flattenedPoints.map(n=>n.color);return this.connectLastAndFirstAnchor&&t.pop(),t}get colorsCSS(){let t=this.flattenedPoints.map(n=>n.hslCSS);return this.connectLastAndFirstAnchor&&t.pop(),t}shiftHue(t){this.anchorPoints.forEach(n=>n.shiftHue(t)),this.updatePointPairs()}};export{F as Poline,p as hslToPoint,b as pointToHSL,Y as positionFunctions,f as randomHSLPair,X as randomHSLTriple,C as vectorsOnLine};
