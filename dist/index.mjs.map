{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["export type FuncNumberReturn = (arg0: number) => Vector2;\nexport type Vector2 = [number, number];\nexport type Vector3 = [number, number, number];\n\nexport const pointToHSL = (x: number, y: number, saturation: number):Vector3 => {\n  const cy = .5; \n  const cx = .5;\n  const radians = Math.atan2(y - cy, x - cx);\n  let deg = radians * (180 / Math.PI);\n  deg = ((deg + 90) % 360);\n\n  const dist = Math.sqrt(Math.pow(y - cy, 2) + Math.pow(x - cx, 2))\n\n  const l = (dist / cx);\n\n  return [deg, s, l];\n};\n\nexport const hslToPoint = (hsl: Vector3):Vector2 => {\n  const [h, s, l] = hsl;\n  const cx = .5;\n  const cy = .5;\n\n  const radians = h / (180 / Math.PI) - 90;\n  const dist = l * cx;\n  const x = cx + dist * Math.cos(radians);\n  const y = cy + dist * Math.sin(radians);\n\n  return [x, y];\n}\n\nexport const randomHSLPair = (\n  minHDiff = 90, \n  minSDiff = 0, \n  minLDiff = .2,\n  previousColor: Vector3\n): [Vector3, Vector3] => {\n  let h1, s1, l1;\n\n  if (previousColor) {\n    [h1, s1, l1] = previousColor;  \n  } else {\n    h1 = Math.random() * 360;\n    s1 = Math.random();\n    l1 = Math.random();\n  }\n  \n  const h2 = (360 + (h1 + minHDiff + Math.random() * (360 - minHDiff * 2))) % 360;\n  const s2 = minSDiff + (Math.random() * (1-minSDiff));\n  const l2 = minSDiff + (Math.random() * (1-minLDiff));\n\n  return [[h1, s1, l1], [h2, s2, l2]];\n}\n\nexport const pointsOnLine = (\n  p1: Vector2, p2: Vector2, \n  numPoints = 4, \n  f = (t, p) => t\n) => {\n  const points = [];\n  for (let i = 0; i < numPoints; i++) {\n    let t = i / (numPoints - 1);\n    let tModified = f(t, numPoints);\n    let x = (1 - tModified) * p1.x + tModified * p2.x;\n    let y = (1 - tModified) * p1.y + tModified * p2.y;\n    points.push([x, y]);\n  }\n  return points;\n}\n\nexport const exponentialDistance = (t: number, n: number) => {\n  return t ** 2;\n}\n\nclass ColorPoint {\n  constructor(options: {x: number, y: number, color: Vector3}) {\n    if (options.x && options.y && options.color) {\n      throw new Error('Point must be initialized with either x,y or hsl');\n    } else if (options.x && options.y) {\n      this.x = options.x;\n      this.y = options.y;\n      this.color = pointToHSL(this.x, this.y, 1);\n    } else if (options.color) {\n      this.color = options.color;\n      [this.x, this.y] = hslToPoint(this.hsl);\n    }\n  }\n\n  x: number;\n  y: number;\n  color: Vector3;\n}\n\nexport class Poline {\n  constructor(controlPoints: [Vector3], numPoints: number) {\n    this.pointsAsColor = controlPoints;\n    this.numPoints = numPoints;\n    this.points = pointsOnLine(hslToPoint(hsl1), hslToPoint(hsl2), numPoints, exponentialDistance);\n  }\n\n  pointsAsColor: Vector3[];\n  numPoints: number;\n  points: Vector2[];\n\n  createPointPairs() {\n    const pairs = [];\n    for (let i = 0; i < this.points.length - 1; i++) {\n      pairs.push([this.points[i], this.points[i+1]]);\n    }\n    return pairs;\n  }\n}"],
  "mappings": ";;;AAIO,IAAM,aAAa,CAAC,GAAW,GAAW,eAA+B;AAC9E,QAAM,KAAK;AACX,QAAM,KAAK;AACX,QAAM,UAAU,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE;AACzC,MAAI,MAAM,WAAW,MAAM,KAAK;AAChC,SAAQ,MAAM,MAAM;AAEpB,QAAM,OAAO,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC;AAEhE,QAAM,IAAK,OAAO;AAElB,SAAO,CAAC,KAAK,GAAG,CAAC;AACnB;AAEO,IAAM,aAAa,CAAC,QAAyB;AAClD,QAAM,CAAC,GAAGA,IAAG,CAAC,IAAI;AAClB,QAAM,KAAK;AACX,QAAM,KAAK;AAEX,QAAM,UAAU,KAAK,MAAM,KAAK,MAAM;AACtC,QAAM,OAAO,IAAI;AACjB,QAAM,IAAI,KAAK,OAAO,KAAK,IAAI,OAAO;AACtC,QAAM,IAAI,KAAK,OAAO,KAAK,IAAI,OAAO;AAEtC,SAAO,CAAC,GAAG,CAAC;AACd;AAEO,IAAM,gBAAgB,CAC3B,WAAW,IACX,WAAW,GACX,WAAW,KACX,kBACuB;AACvB,MAAI,IAAI,IAAI;AAEZ,MAAI,eAAe;AACjB,KAAC,IAAI,IAAI,EAAE,IAAI;AAAA,EACjB,OAAO;AACL,SAAK,KAAK,OAAO,IAAI;AACrB,SAAK,KAAK,OAAO;AACjB,SAAK,KAAK,OAAO;AAAA,EACnB;AAEA,QAAM,MAAM,OAAO,KAAK,WAAW,KAAK,OAAO,KAAK,MAAM,WAAW,OAAO;AAC5E,QAAM,KAAK,WAAY,KAAK,OAAO,KAAK,IAAE;AAC1C,QAAM,KAAK,WAAY,KAAK,OAAO,KAAK,IAAE;AAE1C,SAAO,CAAC,CAAC,IAAI,IAAI,EAAE,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;AACpC;AAEO,IAAM,eAAe,CAC1B,IAAa,IACb,YAAY,GACZ,IAAI,CAAC,GAAG,MAAM,MACX;AACH,QAAM,SAAS,CAAC;AAChB,WAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,QAAI,IAAI,KAAK,YAAY;AACzB,QAAI,YAAY,EAAE,GAAG,SAAS;AAC9B,QAAI,KAAK,IAAI,aAAa,GAAG,IAAI,YAAY,GAAG;AAChD,QAAI,KAAK,IAAI,aAAa,GAAG,IAAI,YAAY,GAAG;AAChD,WAAO,KAAK,CAAC,GAAG,CAAC,CAAC;AAAA,EACpB;AACA,SAAO;AACT;AAEO,IAAM,sBAAsB,CAAC,GAAW,MAAc;AAC3D,SAAO,SAAK;AACd;AAqBO,IAAM,SAAN,MAAa;AAAA,EAClB,YAAY,eAA0B,WAAmB;AACvD,SAAK,gBAAgB;AACrB,SAAK,YAAY;AACjB,SAAK,SAAS,aAAa,WAAW,IAAI,GAAG,WAAW,IAAI,GAAG,WAAW,mBAAmB;AAAA,EAC/F;AAAA,EAMA,mBAAmB;AACjB,UAAM,QAAQ,CAAC;AACf,aAAS,IAAI,GAAG,IAAI,KAAK,OAAO,SAAS,GAAG,KAAK;AAC/C,YAAM,KAAK,CAAC,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,IAAE,CAAC,CAAC,CAAC;AAAA,IAC/C;AACA,WAAO;AAAA,EACT;AACF;",
  "names": ["s"]
}
